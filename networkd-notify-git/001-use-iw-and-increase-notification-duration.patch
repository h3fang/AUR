diff --git a/networkd-notify b/networkd-notify
index eda3f0f..aac99f1 100755
--- a/networkd-notify
+++ b/networkd-notify
@@ -18,7 +18,6 @@ import dbus.mainloop.glib
 
 # Constants
 NETWORKCTL = ['/usr/bin/networkctl', '/bin/networkctl']
-IWCONFIG = ['/usr/bin/iwconfig', '/sbin/iwconfig']
 APP_NAME  = 'networkd'
 
 STATE_IGN = {'carrier', 'degraded'}
@@ -29,8 +28,8 @@ STATE_MAP = {'off': 'offline',
 
 # Nifty globals
 IFACE_MAP = {}
-NOTIFY_MS_SHORT = 1000
-NOTIFY_MS_LONG = 3000
+NOTIFY_MS_SHORT = 5000
+NOTIFY_MS_LONG = 10000
 
 NOTIFY_IF = None
 NETWORKD_IF = None
@@ -103,10 +102,8 @@ def unquote(buf, char='\\'):
 
 
 def get_wlan_essid(iface):
-    out = subprocess.check_output([IWCONFIG, '--', iface])
-    line = out.split(b'\n')[0].decode('ascii')
-    essid = line[line.find('ESSID:')+7:-3]
-    return unquote(essid)
+    essid = subprocess.check_output(f"/usr/bin/iw {iface} info | /usr/bin/grep -Po '(?<=ssid ).*'", shell=True)
+    return unquote(essid.decode(sys.stdout.encoding).strip())
 
 
 def property_changed(typ, data, _, path):
@@ -163,10 +160,6 @@ if __name__ == '__main__':
     if NETWORKCTL is None:
         sys.exit("networkctl binary not found")
 
-    IWCONFIG = resolve_path(IWCONFIG)
-    if IWCONFIG is None:
-        sys.exit("iwconfig binary not found")
-
     # listen on system-wide bus for networkd events
     dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
     bus = dbus.SystemBus()
